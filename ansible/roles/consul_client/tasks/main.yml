---

# - name: check token generated
#   ansible.builtin.stat:
#     path: /var/agent-token.json
#   register: check_token

# - name: register consul acl root token
#   ansible.builtin.set_fact:
#     consul_root_token: '{{ "SecretID" | extract(lookup("file", "consul_acl_bootstrap.json") | from_json) }}'

# - name: generate agent token
#   when: not check_token.stat.exists
#   ansible.builtin.command:
#     cmd: "consul acl token create -http-addr='http://{{ groups['consul_servers'] | first }}:8500' -token='{{ consul_root_token }}' -description='{{ inventory_hostname }}' -node-identity='{{ inventory_hostname }}:dc1' -format=json"
#   register: agent_token_result

# - name: save agent token
#   when: not check_token.stat.exists
#   ansible.builtin.copy:
#     content: '{{ agent_token_result.stdout }}'
#     dest: /var/agent-token.json

# - name: read agent token
#   ansible.builtin.slurp:
#     src: /var/agent-token.json
#   register: agent_token

# - name: get token values
#   ansible.builtin.set_fact:
#     consul_acl_token_accessor_id: '{{ "AccessorID" | extract(agent_token.content | b64decode | from_json) }}'
#     consul_acl_token: '{{ "SecretID" | extract(agent_token.content | b64decode | from_json) }}'

- name: copy consul config
  ansible.builtin.template:
    src: consul.hcl.j2
    dest: /etc/consul.d/consul.hcl
  register: consul_config

- name: restart consul
  when: consul_config.changed
  ansible.builtin.systemd:
    name: consul
    state: restarted
    enabled: yes
